20. Valid Parentheses
Easy
18.4K
1K
Companies

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.
    Every close bracket has a corresponding open bracket of the same type.

 

Example 1:

Input: s = "()"
Output: true

Example 2:

Input: s = "()[]{}"
Output: true

Example 3:

Input: s = "(]"
Output: false

 

Constraints:

    1 <= s.length <= 104
    s consists of parentheses only '()[]{}'.

class Solution {
    public boolean isValid(String str) {
        Stack<Character> s = new Stack<Character>();
        for(int i=0; i<str.length();i++){
            char ch = str.charAt(i);
            if(ch=='('|| ch=='['||ch=='{'){
                s.push(ch);
            }else if(!s.isEmpty()){
                if(s.peek() == '(' && ch ==')' ) s.pop();
                else if (s.peek() == '[' && ch ==']' ) s.pop();
                else if (s.peek() == '{' && ch =='}' ) s.pop();
                else return false;
            }else return false;
        }
        return s.isEmpty();
    }
}
